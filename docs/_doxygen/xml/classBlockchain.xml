<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classBlockchain" kind="class" language="C++" prot="public">
    <compoundname>Blockchain</compoundname>
    <includes refid="Blockchain_8hpp" local="no">Blockchain.hpp</includes>
    <templateparamlist>
      <param>
        <type>uint64_t</type>
        <declname>size</declname>
        <defname>size</defname>
      </param>
    </templateparamlist>
    <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classBlockchain_1a4cc8e29a707d1e7e51a163ba8271911d" prot="private" static="yes" mutable="no">
        <type><ref refid="classBlockchain" kindref="compound">Blockchain</ref>&lt; size &gt; *</type>
        <definition>Blockchain&lt;size&gt;* Blockchain&lt; size &gt;::instance</definition>
        <argsstring></argsstring>
        <name>instance</name>
        <qualifiedname>Blockchain::instance</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Blockchain.hpp" line="50" column="21" bodyfile="include/Blockchain.hpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBlockchain_1a4bb5ee88e7a1d892499e1f61f51fa09b" prot="private" static="yes" mutable="no">
        <type>std::mutex</type>
        <definition>std::mutex Blockchain&lt; size &gt;::mutex</definition>
        <argsstring></argsstring>
        <name>mutex</name>
        <qualifiedname>Blockchain::mutex</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Blockchain.hpp" line="51" column="21" bodyfile="include/Blockchain.hpp" bodystart="51" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classBlockchain_1aff7b4061680a420c5a731afbbe593562" prot="private" static="no" mutable="no">
        <type><ref refid="classBlock" kindref="compound">Block</ref>&lt; size &gt; *</type>
        <definition>Block&lt;size&gt;* Blockchain&lt; size &gt;::first_block</definition>
        <argsstring></argsstring>
        <name>first_block</name>
        <qualifiedname>Blockchain::first_block</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Blockchain.hpp" line="52" column="9" bodyfile="include/Blockchain.hpp" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBlockchain_1a6414885b1785b0abdaa7d82195ecdff6" prot="private" static="no" mutable="no">
        <type><ref refid="classBlock" kindref="compound">Block</ref>&lt; size &gt; *</type>
        <definition>Block&lt;size&gt;* Blockchain&lt; size &gt;::last_block</definition>
        <argsstring></argsstring>
        <name>last_block</name>
        <qualifiedname>Blockchain::last_block</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Blockchain.hpp" line="53" column="9" bodyfile="include/Blockchain.hpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBlockchain_1a0f9f3e3f5841bd507d267eba3b236b0c" prot="private" static="no" mutable="no">
        <type><ref refid="classBlock" kindref="compound">Block</ref>&lt; size &gt; *</type>
        <definition>Block&lt;size&gt;* Blockchain&lt; size &gt;::current_block</definition>
        <argsstring></argsstring>
        <name>current_block</name>
        <qualifiedname>Blockchain::current_block</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Blockchain.hpp" line="54" column="9" bodyfile="include/Blockchain.hpp" bodystart="54" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classBlockchain_1a6c836c5b0cbe5cbf65b370d81f7b9bf2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Blockchain&lt; size &gt;::Blockchain</definition>
        <argsstring>()</argsstring>
        <name>Blockchain</name>
        <qualifiedname>Blockchain::Blockchain</qualifiedname>
        <briefdescription>
<para>Constructor for a new <ref refid="classBlockchain" kindref="compound">Blockchain</ref>, should be called when wanting to create a new genesis block. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Blockchain.hpp" line="16" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classBlockchain_1ac51fd739aac15f97324c36cf51d7af4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Blockchain&lt; size &gt;::Blockchain</definition>
        <argsstring>(Blockchain &amp;other)=delete</argsstring>
        <name>Blockchain</name>
        <qualifiedname>Blockchain::Blockchain</qualifiedname>
        <param>
          <type><ref refid="classBlockchain" kindref="compound">Blockchain</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>A <ref refid="classBlockchain" kindref="compound">Blockchain</ref> shouldn&apos;t be copiable. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Blockchain.hpp" line="18" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classBlockchain_1ae18e5f825388a1e30304a1d53a29770e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Blockchain&lt; size &gt;::operator=</definition>
        <argsstring>(const Blockchain &amp;blockchain)=delete</argsstring>
        <name>operator=</name>
        <qualifiedname>Blockchain::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classBlockchain" kindref="compound">Blockchain</ref> &amp;</type>
          <declname>blockchain</declname>
        </param>
        <briefdescription>
<para>There should not be a way to modify the <ref refid="classBlockchain" kindref="compound">Blockchain</ref> directly. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Blockchain.hpp" line="20" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classBlockchain_1a0b648730686cb8da1935ee5c54e03bc8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Blockchain&lt; size &gt;::~Blockchain</definition>
        <argsstring>()</argsstring>
        <name>~Blockchain</name>
        <qualifiedname>Blockchain::~Blockchain</qualifiedname>
        <briefdescription>
<para><ref refid="classBlockchain" kindref="compound">Blockchain</ref> destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Blockchain.hpp" line="24" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classBlockchain_1a99f269def0cb70a9c3013dec92626362" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::optional&lt; <ref refid="classBlock" kindref="compound">Block</ref>&lt; size &gt; &gt; &amp;</type>
        <definition>std::optional&lt; Block&lt; size &gt; &gt; &amp; Blockchain&lt; size &gt;::next</definition>
        <argsstring>()</argsstring>
        <name>next</name>
        <qualifiedname>Blockchain::next</qualifiedname>
        <briefdescription>
<para>Goes to the next block in the <ref refid="classBlockchain" kindref="compound">Blockchain</ref>, returns nullopt_t when there is none. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Blockchain.hpp" line="27" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classBlockchain_1a915b64d7ba34902d718d98a9a7b8304b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::optional&lt; <ref refid="classBlock" kindref="compound">Block</ref>&lt; size &gt; &gt; &amp;</type>
        <definition>std::optional&lt; Block&lt; size &gt; &gt; &amp; Blockchain&lt; size &gt;::previous</definition>
        <argsstring>()</argsstring>
        <name>previous</name>
        <qualifiedname>Blockchain::previous</qualifiedname>
        <briefdescription>
<para>Goes to the previous block in the <ref refid="classBlockchain" kindref="compound">Blockchain</ref>, returns nullopt_t when there is none. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Blockchain.hpp" line="30" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classBlockchain_1a9900bb2ce3c2702afaa570e6cf779c99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::optional&lt; <ref refid="classBlock" kindref="compound">Block</ref>&lt; size &gt; &gt; &amp;</type>
        <definition>std::optional&lt; Block&lt; size &gt; &gt; &amp; Blockchain&lt; size &gt;::first</definition>
        <argsstring>()</argsstring>
        <name>first</name>
        <qualifiedname>Blockchain::first</qualifiedname>
        <briefdescription>
<para>Goes to the first block in the <ref refid="classBlockchain" kindref="compound">Blockchain</ref>, if the Genesis <ref refid="classBlock" kindref="compound">Block</ref> is yet to be generated returns nullopt_t. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Blockchain.hpp" line="33" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classBlockchain_1afa196a8e1b5a514f1a1fe62f03a07422" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::optional&lt; <ref refid="classBlock" kindref="compound">Block</ref>&lt; size &gt; &gt; &amp;</type>
        <definition>std::optional&lt; Block&lt; size &gt; &gt; &amp; Blockchain&lt; size &gt;::last</definition>
        <argsstring>()</argsstring>
        <name>last</name>
        <qualifiedname>Blockchain::last</qualifiedname>
        <briefdescription>
<para>Goes to the last block in the <ref refid="classBlockchain" kindref="compound">Blockchain</ref>, if the Genesis <ref refid="classBlock" kindref="compound">Block</ref> is yet to be generated returns nullopt_t. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Blockchain.hpp" line="36" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classBlockchain_1afe8c3764705a0fe2fcb61982f0e7f047" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Blockchain&lt; size &gt;::insert</definition>
        <argsstring>(Block&lt; size &gt; &amp;block)</argsstring>
        <name>insert</name>
        <qualifiedname>Blockchain::insert</qualifiedname>
        <param>
          <type><ref refid="classBlock" kindref="compound">Block</ref>&lt; size &gt; &amp;</type>
          <declname>block</declname>
        </param>
        <briefdescription>
<para>Inserts a new block in the <ref refid="classBlockchain" kindref="compound">Blockchain</ref>, this interface is meant primarily for testing purposes for now, the inner logic of nextForging should be used instead. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>block</parametername>
</parameternamelist>
<parameterdescription>
<para>Aritificially generated block </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Blockchain.hpp" line="41" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classBlockchain_1a427f6ceb2f6db62baaf4e54c03be81d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::optional&lt; uint64_t &gt;</type>
        <definition>std::optional&lt; uint64_t &gt; Blockchain&lt; size &gt;::nextForging</definition>
        <argsstring>()</argsstring>
        <name>nextForging</name>
        <qualifiedname>Blockchain::nextForging</qualifiedname>
        <briefdescription>
<para>Forges a new block in the blockchain, this method should create new threads for the computing. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Blockchain.hpp" line="44" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classBlockchain_1ac8f917e96b47eeffd25fab541ad588c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::optional&lt; <ref refid="classBlock" kindref="compound">Block</ref>&lt; size &gt; &gt;</type>
        <definition>std::optional&lt; Block&lt; size &gt; &gt; Blockchain&lt; size &gt;::search</definition>
        <argsstring>(uint64_t id)</argsstring>
        <name>search</name>
        <qualifiedname>Blockchain::search</qualifiedname>
        <param>
          <type>uint64_t</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>This is a method for searching a certaing block based on its id. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>Serial number that represents the position the block was forged </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Blockchain.hpp" line="47" column="17"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classBlockchain_1a7af31999071cec3cfe0a78c5b282799d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBlockchain" kindref="compound">Blockchain</ref> &amp;</type>
        <definition>static Blockchain &amp; Blockchain&lt; size &gt;::getInstance</definition>
        <argsstring>()</argsstring>
        <name>getInstance</name>
        <qualifiedname>Blockchain::getInstance</qualifiedname>
        <briefdescription>
<para>Returns an instance (reference) to the <ref refid="classBlockchain" kindref="compound">Blockchain</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Blockchain.hpp" line="22" column="21"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>This is a class that represents the entirety of the <ref refid="classBlockchain" kindref="compound">Blockchain</ref> itself, holds a linked list with a pointer to the first and last forged Blocks. </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Represent the size of the transactions array in a <ref refid="classBlock" kindref="compound">Block</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <location file="include/Blockchain.hpp" line="12" column="1" bodyfile="include/Blockchain.hpp" bodystart="12" bodyend="55"/>
    <listofallmembers>
      <member refid="classBlockchain_1a6c836c5b0cbe5cbf65b370d81f7b9bf2" prot="public" virt="non-virtual"><scope>Blockchain</scope><name>Blockchain</name></member>
      <member refid="classBlockchain_1ac51fd739aac15f97324c36cf51d7af4c" prot="public" virt="non-virtual"><scope>Blockchain</scope><name>Blockchain</name></member>
      <member refid="classBlockchain_1a0f9f3e3f5841bd507d267eba3b236b0c" prot="private" virt="non-virtual"><scope>Blockchain</scope><name>current_block</name></member>
      <member refid="classBlockchain_1a9900bb2ce3c2702afaa570e6cf779c99" prot="public" virt="non-virtual"><scope>Blockchain</scope><name>first</name></member>
      <member refid="classBlockchain_1aff7b4061680a420c5a731afbbe593562" prot="private" virt="non-virtual"><scope>Blockchain</scope><name>first_block</name></member>
      <member refid="classBlockchain_1a7af31999071cec3cfe0a78c5b282799d" prot="public" virt="non-virtual"><scope>Blockchain</scope><name>getInstance</name></member>
      <member refid="classBlockchain_1afe8c3764705a0fe2fcb61982f0e7f047" prot="public" virt="non-virtual"><scope>Blockchain</scope><name>insert</name></member>
      <member refid="classBlockchain_1a4cc8e29a707d1e7e51a163ba8271911d" prot="private" virt="non-virtual"><scope>Blockchain</scope><name>instance</name></member>
      <member refid="classBlockchain_1afa196a8e1b5a514f1a1fe62f03a07422" prot="public" virt="non-virtual"><scope>Blockchain</scope><name>last</name></member>
      <member refid="classBlockchain_1a6414885b1785b0abdaa7d82195ecdff6" prot="private" virt="non-virtual"><scope>Blockchain</scope><name>last_block</name></member>
      <member refid="classBlockchain_1a4bb5ee88e7a1d892499e1f61f51fa09b" prot="private" virt="non-virtual"><scope>Blockchain</scope><name>mutex</name></member>
      <member refid="classBlockchain_1a99f269def0cb70a9c3013dec92626362" prot="public" virt="non-virtual"><scope>Blockchain</scope><name>next</name></member>
      <member refid="classBlockchain_1a427f6ceb2f6db62baaf4e54c03be81d4" prot="public" virt="non-virtual"><scope>Blockchain</scope><name>nextForging</name></member>
      <member refid="classBlockchain_1ae18e5f825388a1e30304a1d53a29770e" prot="public" virt="non-virtual"><scope>Blockchain</scope><name>operator=</name></member>
      <member refid="classBlockchain_1a915b64d7ba34902d718d98a9a7b8304b" prot="public" virt="non-virtual"><scope>Blockchain</scope><name>previous</name></member>
      <member refid="classBlockchain_1ac8f917e96b47eeffd25fab541ad588c6" prot="public" virt="non-virtual"><scope>Blockchain</scope><name>search</name></member>
      <member refid="classBlockchain_1a0b648730686cb8da1935ee5c54e03bc8" prot="public" virt="non-virtual"><scope>Blockchain</scope><name>~Blockchain</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
